{"version":3,"file":"static/js/387.b70f412d.chunk.js","mappings":"iUAIO,SAAeA,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,EAAAA,GAAAA,IAAU,uBAAwB,CACvDC,OAAQ,CACNC,QAAS,sCAJV,cAEGC,EAFH,yBAOIA,GAPJ,gCASHC,QAAQC,MAAR,MATG,gFAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gGAEoBP,EAAAA,GAAAA,IAAU,iBAAkB,CACjDC,OAAQ,CACNM,MAAOA,EACPL,QAAS,mCACTM,SAAU,QACVC,KAAM,EACNC,eAAe,KARhB,cAWkC,KAT/BP,EAFH,QAWUQ,KAAKC,QAAQC,QACxBC,EAAAA,GAAAA,MAAY,8BAZX,kBAcIX,GAdJ,gCAgBHC,QAAQC,MAAR,MAhBG,gFAoBA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gGAEoBhB,EAAAA,GAAAA,IAAA,kBAAqBgB,GAAY,CACtDf,OAAQ,CACNC,QAAS,mCACTM,SAAU,WALX,cAEGL,EAFH,yBAQIA,GARJ,gCAUHC,QAAQC,MAAR,MAVG,gFAcA,SAAeY,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,gGAEoBhB,EAAAA,GAAAA,IAAA,kBAAqBgB,EAArB,YAAyC,CAC9Df,OAAQ,CACNC,QAAS,mCACTM,SAAU,WALX,cAEGL,EAFH,yBAQIA,GARJ,gCAUHC,QAAQC,MAAR,MAVG,gFAcA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,gGAEoBhB,EAAAA,GAAAA,IAAA,kBAAqBgB,EAArB,YAAyC,CAC9Df,OAAQ,CACNC,QAAS,mCACTM,SAAU,WALX,cAEGL,EAFH,yBAQIA,GARJ,gCAUHC,QAAQC,MAAR,MAVG,gFA/DPL,EAAAA,GAAAA,SAAAA,QAAyB,6B,0JCCZmB,EAAcC,EAAAA,GAAAA,GAAH,sCACbC,EAAAA,EAAAA,WAEEC,EAAcF,EAAAA,GAAAA,EAAH,4DAEbC,EAAAA,EAAAA,gB,SCwBX,EA1BgB,WACd,OAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMxB,GAASyB,EAAAA,EAAAA,MAMf,OALAC,EAAAA,EAAAA,YAAU,YACRT,EAAAA,EAAAA,IAAgBjB,EAAO2B,SAASC,MAAK,gBAAGlB,EAAH,EAAGA,KAAH,OACnCc,EAAgBd,EAAKC,QADc,GAGtC,GAAE,CAACX,EAAO2B,WAET,SAAC,IAAD,UAC2B,IAAxBJ,EAAaX,QACZ,SAACS,EAAD,wDAEA,SAACH,EAAD,UACGK,EAAaM,KAAI,SAAAC,GAAM,OACtB,2BACE,qCAAaA,EAAOC,WACpB,SAACV,EAAD,UAAcS,EAAOE,YAFdF,EAAOG,GADM,OAUjC,C","sources":["api/apithemoviedb.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\n\nexport async function getTrendingMovies() {\n  try {\n    const response = await axios.get('3/trending/movie/day', {\n      params: {\n        api_key: '74bfe718a55ac7916c6e6ad87b15f944',\n      },\n    });\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMoviesByName(query) {\n  try {\n    const response = await axios.get('3/search/movie', {\n      params: {\n        query: query,\n        api_key: '74bfe718a55ac7916c6e6ad87b15f944',\n        language: 'en-US',\n        page: 1,\n        include_adult: false,\n      },\n    });\n    if (response.data.results.length === 0) {\n      toast.error('Please input correct query');\n    }\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieDetails(movie_id) {\n  try {\n    const response = await axios.get(`3/movie/${movie_id}`, {\n      params: {\n        api_key: '74bfe718a55ac7916c6e6ad87b15f944',\n        language: 'en-US',\n      },\n    });\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCast(movie_id) {\n  try {\n    const response = await axios.get(`3/movie/${movie_id}/credits`, {\n      params: {\n        api_key: '74bfe718a55ac7916c6e6ad87b15f944',\n        language: 'en-US',\n      },\n    });\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieReviews(movie_id) {\n  try {\n    const response = await axios.get(`3/movie/${movie_id}/reviews`, {\n      params: {\n        api_key: '74bfe718a55ac7916c6e6ad87b15f944',\n        language: 'en-US',\n      },\n    });\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import styled from 'styled-components';\nimport colors from 'utils/colors';\n\nexport const ReviewsList = styled.ul`\n  color: ${colors.maintextc};\n`;\nexport const ReviewsText = styled.p`\n  margin-left: 20px;\n  color: ${colors.secondarytextc};\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'api/apithemoviedb';\nimport LayoutBox from 'components/Layout/Layout.styled';\nimport { ReviewsText, ReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const params = useParams();\n  useEffect(() => {\n    getMovieReviews(params.movieId).then(({ data }) =>\n      setMovieReviews(data.results)\n    );\n  }, [params.movieId]);\n  return (\n    <LayoutBox>\n      {movieReviews.length === 0 ? (\n        <ReviewsText>We don't have any reviews for this movie</ReviewsText>\n      ) : (\n        <ReviewsList>\n          {movieReviews.map(review => (\n            <li key={review.id}>\n              <h4>Author: {review.author}</h4>\n              <ReviewsText>{review.content}</ReviewsText>\n            </li>\n          ))}\n        </ReviewsList>\n      )}\n    </LayoutBox>\n  );\n};\n\nexport default Reviews;\n"],"names":["getTrendingMovies","axios","params","api_key","response","console","error","getMoviesByName","query","language","page","include_adult","data","results","length","toast","getMovieDetails","movie_id","getMovieCast","getMovieReviews","ReviewsList","styled","colors","ReviewsText","useState","movieReviews","setMovieReviews","useParams","useEffect","movieId","then","map","review","author","content","id"],"sourceRoot":""}