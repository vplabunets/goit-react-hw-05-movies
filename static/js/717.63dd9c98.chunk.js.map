{"version":3,"file":"static/js/717.63dd9c98.chunk.js","mappings":"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","sources":["lib/axiosConfig.js","api/apiTheMovieDb.js","pages/Movies/Movies.jsx","pages/Movies/Movies.styled.jsx","utils/placeholders.js"],"sourcesContent":["export const axiosBaseUrl = 'https://api.themoviedb.org/';\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { axiosBaseUrl } from 'lib/axiosConfig';\n\nexport async function getTrendingMovies() {\n  try {\n    const response = await axios.get(`${axiosBaseUrl}/3/trending/movie/day`, {\n      params: {\n        api_key: '74bfe718a55ac7916c6e6ad87b15f944',\n      },\n    });\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMoviesByName(query) {\n  try {\n    const response = await axios.get(`${axiosBaseUrl}/3/search/movie`, {\n      params: {\n        query: query,\n        api_key: '74bfe718a55ac7916c6e6ad87b15f944',\n        language: 'en-US',\n        page: 1,\n        include_adult: false,\n      },\n    });\n    if (response.data.results.length === 0) {\n      toast.error('Please input correct query');\n    }\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieDetails(movie_id) {\n  try {\n    const response = await axios.get(`${axiosBaseUrl}/3/movie/${movie_id}`, {\n      params: {\n        api_key: '74bfe718a55ac7916c6e6ad87b15f944',\n        language: 'en-US',\n      },\n    });\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieCast(movie_id) {\n  try {\n    const response = await axios.get(\n      `${axiosBaseUrl}/3/movie/${movie_id}/credits`,\n      {\n        params: {\n          api_key: '74bfe718a55ac7916c6e6ad87b15f944',\n          language: 'en-US',\n        },\n      }\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function getMovieReviews(movie_id) {\n  try {\n    const response = await axios.get(\n      `${axiosBaseUrl}/3/movie/${movie_id}/reviews`,\n      {\n        params: {\n          api_key: '74bfe718a55ac7916c6e6ad87b15f944',\n          language: 'en-US',\n        },\n      }\n    );\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\n","import { useState, useEffect } from 'react';\nimport { Outlet, Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getMoviesByName } from 'api/apiTheMovieDb';\nimport imageplaceholders from 'utils/placeholders';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Carousel } from 'react-responsive-carousel';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport {\n  Button,\n  CarouselWrap,\n  MovieForm,\n  MovieInput,\n  MoviesWrap,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [byNameMovies, setByNameMovies] = useState(null);\n  const [query, setQuery] = useState(null);\n\n  const handleSubmit = e => {\n    if (e.currentTarget.elements.filmName.value === '') {\n      alert('Please input correct query');\n    }\n    e.preventDefault();\n    setQuery(e.currentTarget.elements.filmName.value);\n    setSearchParams({ queryParam: e.currentTarget.elements.filmName.value });\n    e.target.reset();\n  };\n  const search = searchParams.get('queryParam') ?? null;\n  useEffect(() => {\n    if (search) {\n      setQuery(search);\n    }\n    if (!query) {\n      return;\n    }\n\n    getMoviesByName(query).then(({ data }) => setByNameMovies(data.results));\n  }, [query, searchParams, search]);\n  return (\n    <MoviesWrap>\n      <div>\n        <MovieForm onSubmit={handleSubmit}>\n          <MovieInput name=\"filmName\"></MovieInput>\n          <Button type=\"submit\"> Search</Button>\n        </MovieForm>\n      </div>\n      <div>\n        {query && (\n          <ToastContainer\n            position=\"top-right\"\n            autoClose={3000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n            theme=\"light\"\n          />\n        )}\n      </div>\n      {byNameMovies && (\n        <CarouselWrap>\n          <Carousel width={400} dynamicHeight={true} verticalSwipe={'natural'}>\n            {byNameMovies.map(film => (\n              <Link\n                key={film.id}\n                to={`/movies/${film.id}`}\n                state={{ from: location }}\n              >\n                <div id={film.id}>\n                  <img\n                    width={500}\n                    height={600}\n                    src={\n                      film.poster_path\n                        ? `https://image.tmdb.org/t/p/w500/${film.poster_path}`\n                        : imageplaceholders.movieImgPlacholder\n                    }\n                    alt={film.title}\n                  />\n                  <p className=\"legend\">{film.title}</p>\n                </div>\n              </Link>\n            ))}\n          </Carousel>\n        </CarouselWrap>\n      )}\n      <Outlet />\n    </MoviesWrap>\n  );\n};\n\nexport default Movies;\n","import colors from 'utils/colors';\nimport styled from 'styled-components';\nexport const MoviesWrap = styled.div`\n  padding: 10px;\n`;\nexport const MovieForm = styled.form`\n  margin: 10px 0 10px 10px;\n`;\nexport const MovieInput = styled.input`\n  padding-left: 10px;\n  height: 34px;\n  width: 310px;\n  border-radius: 10px;\n  border: none;\n`;\nexport const Button = styled.button`\n  margin-left: 10px;\n  width: 150px;\n  height: 34px;\n  font-size: 20px;\n  font-weight: bold;\n  border-radius: 10px;\n  align-items: center;\n  text-align: center;\n  text-transform: uppercase;\n  color:${colors.maintextc};\n  border: none;\n  outline: none;\n  background-color: transparent;\n\n  &:hover {\n    color: ${colors.accentc}};\n  } ;\n\n  &:focus {\n    background-color: ${colors.mainbackgroundc};\n  }\n`;\n\nexport const ByNameMovieList = styled.ul`\n  padding: 10px;\n`;\nexport const CarouselWrap = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","const imageplaceholders = {\n  movieImgPlacholder:\n    'https://catalog.osaarchivum.org/assets/thumbnail_placeholder_movie-480596e192e7043677f77cf78b13bdd1.jpg',\n  actorImgPlacholder:\n    'https://upload.wikimedia.org/wikipedia/en/b/b1/Portrait_placeholder.png',\n};\n\nexport default imageplaceholders;\n"],"names":["axiosBaseUrl","getTrendingMovies","axios","params","api_key","response","console","error","getMoviesByName","query","language","page","include_adult","data","results","length","toast","getMovieDetails","movie_id","getMovieCast","getMovieReviews","location","useLocation","useSearchParams","searchParams","setSearchParams","useState","byNameMovies","setByNameMovies","setQuery","search","get","useEffect","then","onSubmit","e","currentTarget","elements","filmName","value","alert","preventDefault","queryParam","target","reset","name","type","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","width","dynamicHeight","verticalSwipe","map","film","to","id","state","from","height","src","poster_path","imageplaceholders","alt","title","className","MoviesWrap","styled","MovieForm","MovieInput","Button","colors","CarouselWrap","movieImgPlacholder","actorImgPlacholder"],"sourceRoot":""}